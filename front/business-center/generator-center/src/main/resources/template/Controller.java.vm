package ${package}.${pkgName}.controller;

import java.util.Map;

import com.open.capacity.common.web.PageResult;
import com.open.capacity.common.web.Result;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import com.open.capacity.log.annotation.LogAnnotation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.security.access.prepost.PreAuthorize;
import ${package}.${pkgName}.entity.${className};
import ${package}.${pkgName}.service.${className}Service;


/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Slf4j
@RestController
@RequestMapping("/${pathName}")
@Api(tags = "${comments} API")
public class ${className}Controller {

    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @CrossOrigin
    @ApiOperation(value = "获取全部${tableName}列表")
    @GetMapping("/list")
        ##    @PreAuthorize("hasAnyAuthority('${tableName}:${pathName}:list')" )
    @PreAuthorize("hasAnyAuthority('goodsAdmin:update')")
    @LogAnnotation(module = "user-center", recordRequestParam = false)
    public PageResult list(@RequestParam Map<String, Object> params) {
        PageResult pageResult = ${classname}Service.findAll(params);
        return pageResult;
    }


    /**
     * 保存
     */
    @CrossOrigin
    @ApiOperation(value = "保存${tableName}结果")
    @PutMapping("/save")
        ##    @PreAuthorize("hasAnyAuthority('generator:sysroleuser:save')" )
    @PreAuthorize("hasAnyAuthority('goodsAdmin:save')")
    @LogAnnotation(module = "user-center", recordRequestParam = false)
    public Result save(@RequestBody ${className} ${classname}) {
            ${classname}Service.save(${classname});
        return Result.succeed("保存成功");
    }

    /**
     * 修改
     */
    @CrossOrigin
    @ApiOperation(value = "修改${tableName}结果")
    @PostMapping("/update")
        ##    @PreAuthorize("hasAnyAuthority('generator:sysroleuser:update')" )
    @PreAuthorize("hasAnyAuthority('goodsAdmin:update')")
    @LogAnnotation(module = "user-center", recordRequestParam = false)
    public Result update(@RequestBody ${className} ${classname}) {
            ${classname}Service.update(${classname});
        return Result.succeed("修改成功");
    }

    /**
     * 删除
     */
    @CrossOrigin
    @ApiOperation(value = "删除${tableName}记录")
    @DeleteMapping("/delete/{id}")
        ##    @PreAuthorize("hasAnyAuthority('generator:sysroleuser:delete')" )
    @PreAuthorize("hasAnyAuthority('goodsAdmin:delete')")
    @LogAnnotation(module = "user-center", recordRequestParam = false)
    public Result delete(@PathVariable Long  ${pk.attrname}) {
            ${classname}Service.delete(${pk.attrname});
        return Result.succeed("删除成功");
    }

}
