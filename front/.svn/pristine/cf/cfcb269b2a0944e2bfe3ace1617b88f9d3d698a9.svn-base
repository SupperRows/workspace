<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.open.capacity.user.dao.UserScoresDao">

    <resultMap type="com.open.capacity.user.model.UserScores" id="userScoresMap">
        <result property="scoreId" column="score_id"/>
        <result property="userId" column="user_id"/>
        <result property="score" column="score"/>
        <result property="change" column="change"/>
        <result property="dataSrc" column="data_src"/>
        <result property="dataId" column="data_id"/>
        <result property="remarks" column="remarks"/>
        <result property="scoreType" column="score_type"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <insert id="save" parameterType="com.open.capacity.user.model.UserScores">
        insert into user_scores(score_id,user_id,change,score,data_src,data_id,remarks,score_type,create_time)
        values (#{ scoreId},#{ userId},#{change},#{ score},#{ dataSrc},#{ dataId},#{ remarks},#{ scoreType},now())
    </insert>

    <update id="update" parameterType="com.open.capacity.user.model.UserScores">
        update user_scores
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="change != null">
                change = #{change},
            </if>
            <if test="score != null">
                score = #{score},
            </if>
            <if test="dataSrc != null">
                data_src = #{dataSrc},
            </if>
            <if test="dataId != null">
                data_id = #{dataId},
            </if>
            <if test="remarks != null">
                remarks = #{remarks},
            </if>
            <if test="scoreType != null">
                score_type = #{scoreType},
            </if>
        </set>
        where score_id = #{scoreId}
    </update>

    <delete id="delete" parameterType="long" flushCache="true">
        delete from user_scores where score_id = #{scoreId}
    </delete>

    <select id="findAll" parameterType="map" resultMap="userScoresMap">
        select * from user_scores t
        <include refid="where"/>
    </select>
    <sql id="where">
        <where>
            <if test="searchKey != null and searchKey != '' and searchKey=='userId'">
                and t.user_id = #{searchValue}
            </if>
            <if test="searchKey != null and searchKey != '' and searchKey=='score'">
                and t.score = #{searchValue}
            </if>
            <if test="dataSrc != null and dataSrc != ''">
                and t.data_src = #{dataSrc}
            </if>
            <if test="searchKey != null and searchKey != '' and searchKey=='dataId'">
                and t.data_id like concat('%', #{searchValue}, '%')
            </if>
            <if test="searchKey != null and searchKey != '' and searchKey=='remarks'">
                and t.remarks like concat('%', #{searchValue}, '%')
            </if>
            <if test="scoreType != null and scoreType != '' ">
                and t.score_type = #{scoreType}
            </if>
            <if test="createTime != null and createTime != ''">
                and t.create_time between substring_index(#{createTime}, ' - ', 1) and substring_index(#{createTime}, '
                - ', -1)
            </if>
        </where>
    </sql>
</mapper>